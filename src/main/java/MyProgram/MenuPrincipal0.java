/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package MyProgram;

import static MyProgram.AllFunctions.*;
import java.io.*;
import javax.swing.*;
/**
 *
 * @author LUCAS FERNANDO
 */
public class MenuPrincipal0 extends javax.swing.JDialog {

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal0(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowOpened(java.awt.event.WindowEvent e){
            cargarDatos();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel2 = new java.awt.Panel();
        Saldo = new javax.swing.JLabel();
        $ = new javax.swing.JLabel();
        numSaldo = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        LogoUnab = new javax.swing.JLabel();
        btnPerfil = new javax.swing.JButton();
        btnNotificacion = new javax.swing.JButton();
        btnColchon = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        btnMovimientos = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnDollar = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Saldo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Saldo.setText("Saldo");
        Saldo.setToolTipText("");

        $.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        $.setText("$");

        numSaldo.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        numSaldo.setText("0.00");

        panel1.setBackground(new java.awt.Color(153, 0, 204));
        panel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        LogoUnab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/logounab.png"))); // NOI18N
        LogoUnab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoUnabMouseClicked(evt);
            }
        });

        btnPerfil.setBackground(new java.awt.Color(255, 153, 51));
        btnPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Profile.png"))); // NOI18N
        btnPerfil.setBorder(null);
        btnPerfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPerfilMouseClicked(evt);
            }
        });

        btnNotificacion.setBackground(new java.awt.Color(153, 0, 204));
        btnNotificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Notification.png"))); // NOI18N
        btnNotificacion.setBorder(null);
        btnNotificacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNotificacionMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LogoUnab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNotificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPerfil)
                .addGap(21, 21, 21))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LogoUnab))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNotificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnColchon.setBackground(new java.awt.Color(255, 153, 51));
        btnColchon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Wallet.png"))); // NOI18N
        btnColchon.setBorder(null);
        btnColchon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnColchonMouseClicked(evt);
            }
        });

        btnEnviar.setBackground(new java.awt.Color(255, 153, 51));
        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Send.png"))); // NOI18N
        btnEnviar.setBorder(null);
        btnEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnviarMouseClicked(evt);
            }
        });

        btnMovimientos.setBackground(new java.awt.Color(255, 153, 51));
        btnMovimientos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Document.png"))); // NOI18N
        btnMovimientos.setBorder(null);
        btnMovimientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMovimientosMouseClicked(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Exit.png"))); // NOI18N
        btnExit.setBorder(null);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
        });

        btnDollar.setBackground(new java.awt.Color(255, 153, 51));
        btnDollar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/DollarSing.png"))); // NOI18N
        btnDollar.setBorder(null);
        btnDollar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDollarMouseClicked(evt);
            }
        });

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MyProgram/Image/Home.png"))); // NOI18N
        btnHome.setBorder(null);
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(btnColchon)
                                .addGap(18, 18, 18)
                                .addComponent(btnEnviar)
                                .addGap(18, 18, 18)
                                .addComponent(btnMovimientos))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent($)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Saldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGap(677, 677, 677)
                        .addComponent(btnHome)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit)
                        .addGap(18, 18, 18)
                        .addComponent(btnDollar)))
                .addContainerGap(381, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172)
                .addComponent(Saldo)
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent($)
                    .addComponent(numSaldo))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnColchon)
                    .addComponent(btnEnviar)
                    .addComponent(btnMovimientos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome)
                    .addComponent(btnExit)
                    .addComponent(btnDollar))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPerfilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPerfilMouseClicked
        this.dispose();
        Perfil p = new Perfil(null,true);
        p.setVisible(true);
    }//GEN-LAST:event_btnPerfilMouseClicked

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        if (A_Que_Pag()){
            JOptionPane.showMessageDialog(this,"Volviendo al Menu Principal","",JOptionPane.PLAIN_MESSAGE);
            this.dispose();
            MenuPrincipal1 mp1 = new MenuPrincipal1(null,true);
            mp1.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this,"Volviendo al Menu Principal","",JOptionPane.PLAIN_MESSAGE);
            this.dispose();
            MenuPrincipal0 mp0 = new MenuPrincipal0(null,true);
            mp0.setVisible(true);
        }
    }//GEN-LAST:event_btnHomeMouseClicked

    private void LogoUnabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoUnabMouseClicked
        if (A_Que_Pag()){
            JOptionPane.showMessageDialog(this,"Volviendo al Menu Principal","",JOptionPane.PLAIN_MESSAGE);
            this.dispose();
            MenuPrincipal1 mp1 = new MenuPrincipal1(null,true);
            mp1.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this,"Volviendo al Menu Principal","",JOptionPane.PLAIN_MESSAGE);
            this.dispose();
            MenuPrincipal0 mp0 = new MenuPrincipal0(null,true);
            mp0.setVisible(true);
        }
    }//GEN-LAST:event_LogoUnabMouseClicked

    private void btnColchonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnColchonMouseClicked
        this.dispose();
        Colchon c = new Colchon(null,true);
        c.setVisible(true);
    }//GEN-LAST:event_btnColchonMouseClicked

    private void btnEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviarMouseClicked
        try {
            // Validar saldo
            if (!HaySaldo()) {
                JOptionPane.showMessageDialog(this, "No tiene saldo disponible", "Sin saldo", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
           // Obtener valor a transferir
            String inputValor = JOptionPane.showInputDialog(this, "Digita la Cantidad de dinero que vas a transferir", "Transferir Plata", JOptionPane.PLAIN_MESSAGE);
            if (inputValor == null) return; // Si el usuario cancela
        
            int valor = Integer.parseInt(inputValor);
            if (valor <= 0) {
                JOptionPane.showMessageDialog(this, "La cantidad debe ser mayor que cero", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Validar que tenga suficiente saldo
            if (!ValidarSaldoSuficiente(valor)) {
                JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para esta transferencia", "Saldo insuficiente", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Obtener usuario destino
            String destino = JOptionPane.showInputDialog(this, "Ingresa el usuario al que vas a transferir", "Transferir Plata", JOptionPane.PLAIN_MESSAGE);
            if (destino == null || destino.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un usuario destino", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Validar que no sea el mismo usuario
            if (EsUsuarioActual(destino)) {
                JOptionPane.showMessageDialog(this, "No puedes transferirte a ti mismo", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Validar que exista el usuario destino
            if (!ExisteUsuario(destino)) {
                JOptionPane.showMessageDialog(this, "El usuario destino no existe", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Realizar transferencia
            if (EnviarDinero(valor, destino)) {
                JOptionPane.showMessageDialog(this, "Transferencia realizada con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                cargarDatos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al realizar la transferencia", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un número válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEnviarMouseClicked

    private void btnDollarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDollarMouseClicked
        try {
            // Validar saldo
            if (!HaySaldo()) {
                JOptionPane.showMessageDialog(this, "No tiene saldo disponible", "Sin saldo", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
           // Obtener valor a transferir
            String inputValor = JOptionPane.showInputDialog(this, "Digita la Cantidad de dinero que vas a transferir", "Transferir Plata", JOptionPane.PLAIN_MESSAGE);
            if (inputValor == null) return; // Si el usuario cancela
        
            int valor = Integer.parseInt(inputValor);
            if (valor <= 0) {
                JOptionPane.showMessageDialog(this, "La cantidad debe ser mayor que cero", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Validar que tenga suficiente saldo
            if (!ValidarSaldoSuficiente(valor)) {
                JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para esta transferencia", "Saldo insuficiente", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Obtener usuario destino
            String destino = JOptionPane.showInputDialog(this, "Ingresa el usuario al que vas a transferir", "Transferir Plata", JOptionPane.PLAIN_MESSAGE);
            if (destino == null || destino.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un usuario destino", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Validar que no sea el mismo usuario
            if (EsUsuarioActual(destino)) {
                JOptionPane.showMessageDialog(this, "No puedes transferirte a ti mismo", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Validar que exista el usuario destino
            if (!ExisteUsuario(destino)) {
                JOptionPane.showMessageDialog(this, "El usuario destino no existe", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Realizar transferencia
            if (EnviarDinero(valor, destino)) {
                JOptionPane.showMessageDialog(this, "Transferencia realizada con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                cargarDatos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al realizar la transferencia", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un número válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDollarMouseClicked

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        if (CerrarSesion()) {
            JOptionPane.showMessageDialog(this, "Sesión cerrada correctamente", "Cerrar Sesión", JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); 
            Login lg = new Login(null,true);
            lg.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Error al cerrar la sesión", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnNotificacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNotificacionMouseClicked
        this.dispose();
        Notificacion N = new Notificacion(null, true);
        N.setVisible(true);
    }//GEN-LAST:event_btnNotificacionMouseClicked

    private void btnMovimientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMovimientosMouseClicked
        this.dispose();
        Movimientos M = new Movimientos(null, true);
        M.setVisible(true);
    }//GEN-LAST:event_btnMovimientosMouseClicked
    
    public void cargarDatos(){
        String linea;
        try (BufferedReader br = new BufferedReader(new FileReader("Datos.csv"))) {
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(";");
                if (datos.length >= 10 && datos[10].equals("1")) {
                   String texto = datos[6];
                   numSaldo.setText(texto);
                }
            }
        } catch (IOException e) {
            System.err.println("Error al leer el archivo: " + e.getMessage());
        }
    };
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuPrincipal0 dialog = new MenuPrincipal0(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel $;
    private javax.swing.JLabel LogoUnab;
    private javax.swing.JLabel Saldo;
    private javax.swing.JButton btnColchon;
    private javax.swing.JButton btnDollar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnMovimientos;
    private javax.swing.JButton btnNotificacion;
    private javax.swing.JButton btnPerfil;
    private javax.swing.JLabel numSaldo;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    // End of variables declaration//GEN-END:variables
}
